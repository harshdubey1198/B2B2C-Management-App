import React, { useEffect, useState } from 'react';
import {Button, Card, CardBody, Col,DropdownItem, Dropdown, DropdownMenu, DropdownToggle} from "reactstrap";
import Breadcrumbs from '../../components/Common/Breadcrumb';
import axios from 'axios';



function ClientManagement() {
  const [requestedData, setRequestedData] = useState([])
  const [trigger, setTrigger] = useState(0)
  const [dropdownOpen, setDropdownOpen] = useState({});

const toggleDropdown = (id) => {
  setDropdownOpen(prevState => ({ ...prevState, [id]: !prevState[id] }));
};


  useEffect(() => {
    axios.get(`${process.env.REACT_APP_URL}/clientadmin/getClients`).then((response) => {
      setRequestedData(response)
      console.log(response, "response")
    }).catch((error) => {
      console.log(error);
    })
  }, [trigger])

  const handleAccept = (id) => {
    axios.put(`${process.env.REACT_APP_URL}/clientadmin/updateClient/${id}`, {status: "Accepted"}).then((response) => {
      setTrigger(prev => prev + 1)
    }).catch((error) => {
      console.log(error, "error updating data")
    })
  }

  const handleReject = (id) => {
    axios.put(`${process.env.REACT_APP_URL}/clientadmin/updateClient/${id}`, {status: "Rejected"}).then((response) => {
      setTrigger(prev => prev + 1)
    }).catch((error) => {
      console.log(error, "error updating data")
    })
  }
  const handleHold = (id) => {
    axios.put(`${process.env.REACT_APP_URL}/clientadmin/updateClient/${id}`, {status: "Hold"}).then((response) => {
      setTrigger(prev => prev + 1)
    }).catch((error) => {
      console.log(error, "error updating data")
    })
  }

  const getDropdownItems = (status, id) => {
    const items = [];

    if (status === 'Accepted') {
      items.push(
        <DropdownItem key="pause" onClick={() => handleHold(id)}>Pause</DropdownItem>,
        <DropdownItem key="resume" onClick={() => handleAccept(id)}>Resume</DropdownItem>
      );
    } else {
      items.push(
        <DropdownItem key="accept" onClick={() => handleAccept(id)}>Accept</DropdownItem>,
        <DropdownItem key="reject" onClick={() => handleReject(id)}>Reject</DropdownItem>
      );
    }

    return items;
  };

  console.log(requestedData, "request")
  return (
    <React.Fragment>
      <div className="page-content">
        <Breadcrumbs title="aaMOBee" breadcrumbItem="Client Management" />
        <p className='mm-active'>
          This is the Client Management page.
          Here the client data table will be fetched and CRUD and permissions can be set by master admin.
        </p>
    

        <p className='mm-active'>
          Request Generated by Clients 
        </p>
        <Col lg={12}>
  <Card>
    <CardBody>
      <div className="table-responsive">
        <table className="table table-bordered mb-0">
          <thead>
            <tr>
              <th>Name</th>
              <th>Email</th>
              <th>Company Name</th>
              <th>Company Phone</th>
              <th>Status</th>
              <th>Actions</th> 
            </tr>
          </thead>
          <tbody>
            {requestedData && requestedData.map(client => (
              <tr key={client.id} >
                <td>{client.firstName + " " + client.lastName}</td>
                <td>{client.email}</td>
                <td>{client.companyName}</td>
                <td>{client.companyMobile}</td>
                <td>{client.status}</td>
                
                {/* <td>
                  <div className='d-flex gap-2'>
                    <Button color="success" onClick={() => handleAccept(client?._id)}>Approve</Button>
                    <Button color="danger" onClick={() => handleReject(client?._id)}>Reject</Button>
                    <Button color="info" onClick={() => handleHold(client?._id)}>Hold</Button>
                  </div>
                </td> */}
                <td>
                          <Dropdown isOpen={dropdownOpen[client?._id]} toggle={() => toggleDropdown(client?._id)}>
                            <DropdownToggle caret color="secondary">
                              Actions
                            </DropdownToggle>
                            <DropdownMenu>
                              {getDropdownItems(client.status, client?._id)}
                            </DropdownMenu>
                          </Dropdown>
                        </td>
                
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </CardBody>
  </Card>
</Col>

      </div>
      <style>{`
        .hover-details {
          position: absolute;
          background: white;
          border: 1px solid #ccc;
          padding: 10px;
          bottom: 4px;
          right: 0px;
          box-shadow: 0px 4px 8px rgba(0,0,0,0.1);
        }
      `}</style>
    </React.Fragment>
  );
}

export default ClientManagement;
